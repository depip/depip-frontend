name: CI

on:
  workflow_dispatch:
  push:
    branches: [develop, staging]
jobs:
  build:
    runs-on: [ubuntu-latest]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Set environment variable
        run: |
          SHORT_SHA_COMMIT=$(git rev-parse --short HEAD)
          echo CONTAINER_RELEASE_IMAGE=ghcr.io/depip/depip-frontend:${GITHUB_REF_NAME}_${SHORT_SHA_COMMIT} >> $GITHUB_ENV
      - name: Build the Docker image and push it to the registry
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./ci/build.sh
  update-manifest:
    runs-on: [ubuntu-latest]
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: imranismail/setup-kustomize@v2
      - name: Set environment variable
        run: |
          SHORT_SHA_COMMIT=$(git rev-parse --short HEAD)
          echo CONTAINER_RELEASE_IMAGE=ghcr.io/depip/depip-frontend:${GITHUB_REF_NAME}_${SHORT_SHA_COMMIT} >> $GITHUB_ENV
          echo REPO_MANIFEST_NAME=gitops >> $GITHUB_ENV
          echo REPO_MANIFEST_URL=github.com/depip/gitops.git >> $GITHUB_ENV
          echo REPO_MANIFEST_BRANCH=main >> $GITHUB_ENV
          echo REPO_MANIFEST_ENV_DEV=./clusters/k8s-dev/depip >> $GITHUB_ENV
          echo REPO_MANIFEST_ENV_STAGING=./clusters/k8s-staging/depip >> $GITHUB_ENV
          echo REPO_MANIFEST_ENV_MAIN=./clusters/k8s-prod/depip >> $GITHUB_ENV
          echo REPO_MANIFEST_TAG_IMAGE=image_depip_frontend >> $GITHUB_ENV
      - name: Update manifest
        env:
          PERSONAL_ACCESS_TOKEN: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          ./ci/updateManifest.sh
